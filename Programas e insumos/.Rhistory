day = day(BDPS$DATE),
hour = hour(BDPS$FRAME),
min = minute(BDPS$FRAME),
sec = second(BDPS$FRAME))
BDPS[,c("DATE","FRAME")] <- NULL
BDPS <- BDPS[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPS$DATE)
BDPS <- BDPS[order(BDPS$DATEFRAME),]
###  Estrategia y estadísticas ETF ECH (Réplica Swell)  ###
###                     2021-03-01                      ###
###                     Version 0.0                     ###
###          Authors: Olga Serna / Ivan Serrano         ###
# 0. DESCRIPCIÓN E INSTRUCCIONES ##############################################
# 0.1 Objetivo
# Calcular la señal de la estrategia y sus estadísticas de retorno y riesgo a
# partir de serie histórica OHLC (apertura, máximo, mínimo y cierre) y un árbol
# de decisión de estrategia.
# 0.2 Supuestos
# 0.2.1 Se realizan operaciones a las que haya lugar después de formación de la
#       vela de mercado para cada franja horaria, teniendo en cuenta el periodo
#       de tiempo permitido de operación definido para cada día, el cual excluye
#       las franjas horarias que se consideran de baja liquidez.
# 0.2.2 Todas las franjas horarias se tienen en cuenta para el cálculo de la
#       señal.
# 0.2.3 Se consigue operar en el mercado a los precios de referencia de los
#       umbrales o precios de entrada definidos en el árbol de decisión, con
#       costos transaccionales asociados a un bid-ask spread nulo.
# 0.2.3 No se considera la dinámica de los flujos de capital, pues  no se
#       tienen en cuenta los faltantes o excedentes de efectivo que se pueden
#       presentar al cerrar y abrir posiciones.
# 0.2.4 Para los cálculos de utilidad (pérdida o ganancia en términos
#       monetarios), se tiene en cuenta si la posición es larga o corta.
# 0.2.4 La hora del archivo de insumo OHLC corresponde a la de Santiago y por
#       lo tanto el código considera las fluctuaciones horarias con relación
#       a la hora del este de Estados Unidos.
# 0.3 Instrucciones
# 0.3.1 Guardar con el nombre "Data ETF ECH.xlsx" el archivo que contiene el
#       histórico de precios OHLC en la misma ruta donde se encuentra ubicado
#       el código "Estrategia y estadísticas ETF ECH (Réplica Swell).R". Se
#       debe verificar que el archivo solo contenga la información mencionada y
#       nada adicional (incluso celdas borradas).
# 1. PAQUETES Y CONFIGURACIONES ###############################################
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate")   # makedatetime, year, month,.., second
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Ubicación archivos de origen
BaseDirPath = dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
#Plantilla gráficos
# 2. LECTURA Y PREPARACIÓN DE DATOS ###########################################
# Lectura de archivo histórico de precios
ArchivoCargue <- "Data ETF ECH.xlsx"
BDPS <- read_excel(ArchivoCargue, sheet = "DATOS ECH")
# Asignación de títulos a las columnas
colnames(BDPS) <- c("DATE","FRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")
# Reorganizacion de fechas y franjas horarias
BDPS$DATEFRAME <- make_datetime(year = year(BDPS$DATE),
month = month(BDPS$DATE),
day = day(BDPS$DATE),
hour = hour(BDPS$FRAME),
min = minute(BDPS$FRAME),
sec = second(BDPS$FRAME))
BDPS[,c("DATE","FRAME")] <- NULL
BDPS <- BDPS[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPS$DATEFRAME)
BDPS <- BDPS[order(BDPS$DATEFRAME),]
View(BDPS)
summary(BDPS$DATE)
summary(BDPS)
which(BDPS$VOLUME == max(BDPS$VOLUME))
BDPS[6406,]
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate",   # makedatetime, year, month,.., second
"ggplot2")     # plot
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
ggplot(BDPS$CLOSE)
ggplot(BDPS, aes(x="DATEFRAME", y="CLOSE"))
ggplot(BDPS, aes(x="DATEFRAME", y="CLOSE")) + geom_line()
ggplot(BDPS, aes(x=DATEFRAME, y=CLOSE)) + geom_line()
BDPS[which(BDPS$CLOSE=min(BDPS$CLOSE)),]
BDPS[which(BDPS$CLOSE=min(BDPS$CLOSE))),]
which(BDPS$CLOSE=min(BDPS$CLOSE)
BDPS[which(BDPS$CLOSE==min(BDPS$CLOSE)),]
# Parametrizacion fractales
Fractales <- "Parametros fractales.xlsx"
BDPS <- read_excel(ArchivoCargue, sheet = "Parametros fractales")
BDPS <- read_excel(Fractales, sheet = "Parametros fractales")
###  Estrategia y estadísticas ETF ECH (Réplica Swell)  ###
###                     2021-03-01                      ###
###                     Version 0.0                     ###
###          Authors: Olga Serna / Ivan Serrano         ###
# 0. DESCRIPCIÓN E INSTRUCCIONES ##############################################
# 0.1 Objetivo
# Calcular la señal de la estrategia y sus estadísticas de retorno y riesgo a
# partir de serie histórica OHLC (apertura, máximo, mínimo y cierre) y un árbol
# de decisión de estrategia.
# 0.2 Supuestos
# 0.2.1 Se realizan operaciones a las que haya lugar después de formación de la
#       vela de mercado para cada franja horaria, teniendo en cuenta el periodo
#       de tiempo permitido de operación definido para cada día, el cual excluye
#       las franjas horarias que se consideran de baja liquidez.
# 0.2.2 Todas las franjas horarias se tienen en cuenta para el cálculo de la
#       señal.
# 0.2.3 Se consigue operar en el mercado a los precios de referencia de los
#       umbrales o precios de entrada definidos en el árbol de decisión, con
#       costos transaccionales asociados a un bid-ask spread nulo.
# 0.2.3 No se considera la dinámica de los flujos de capital, pues  no se
#       tienen en cuenta los faltantes o excedentes de efectivo que se pueden
#       presentar al cerrar y abrir posiciones.
# 0.2.4 Para los cálculos de utilidad (pérdida o ganancia en términos
#       monetarios), se tiene en cuenta si la posición es larga o corta.
# 0.2.4 La hora del archivo de insumo OHLC corresponde a la de Santiago y por
#       lo tanto el código considera las fluctuaciones horarias con relación
#       a la hora del este de Estados Unidos.
# 0.3 Instrucciones
# 0.3.1 Guardar con el nombre "Data ETF ECH.xlsx" el archivo que contiene el
#       histórico de precios OHLC en la misma ruta donde se encuentra ubicado
#       el código "Estrategia y estadísticas ETF ECH (Réplica Swell).R". Se
#       debe verificar que el archivo solo contenga la información mencionada y
#       nada adicional (incluso celdas borradas).
# 1. PAQUETES Y CONFIGURACIONES ###############################################
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate",   # makedatetime, year, month,.., second
"ggplot2")     # ggplot
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Ubicación archivos de origen
BaseDirPath = dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
#Plantilla gráficos
# 2. LECTURA Y PREPARACIÓN DE DATOS ###########################################
# Lectura de archivo histórico de precios
ArchivoCargue <- "Data ETF ECH.xlsx"
BDPS <- read_excel(ArchivoCargue, sheet = "DATOS ECH")
# Asignación de títulos a las columnas
colnames(BDPS) <- c("DATE","FRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")
# Reorganizacion de fechas y franjas horarias
BDPS$DATEFRAME <- make_datetime(year = year(BDPS$DATE),
month = month(BDPS$DATE),
day = day(BDPS$DATE),
hour = hour(BDPS$FRAME),
min = minute(BDPS$FRAME),
sec = second(BDPS$FRAME))
BDPS[,c("DATE","FRAME")] <- NULL
BDPS <- BDPS[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPS$DATEFRAME)
BDPS <- BDPS[order(BDPS$DATEFRAME),]
# 3. CÁLCULO SEÑALES ##########################################################
# Parametrizacion fractales
ArchivoFractales <- "Parametros fractales.xlsx"
Fractales <- read_excel(ArchivoFractales, sheet = "Parametros fractales")
View(Fractales)
###  Estrategia y estadísticas ETF ECH (Réplica Swell)  ###
###                     2021-03-01                      ###
###                     Version 0.0                     ###
###          Authors: Olga Serna / Ivan Serrano         ###
# 0. DESCRIPCIÓN E INSTRUCCIONES ##############################################
# 0.1 Objetivo
# Calcular la señal de la estrategia y sus estadísticas de retorno y riesgo a
# partir de serie histórica OHLC (apertura, máximo, mínimo y cierre) y un árbol
# de decisión de estrategia.
# 0.2 Supuestos
# 0.2.1 Se realizan operaciones a las que haya lugar después de formación de la
#       vela de mercado para cada franja horaria, teniendo en cuenta el periodo
#       de tiempo permitido de operación definido para cada día, el cual excluye
#       las franjas horarias que se consideran de baja liquidez.
# 0.2.2 Todas las franjas horarias se tienen en cuenta para el cálculo de la
#       señal.
# 0.2.3 Se consigue operar en el mercado a los precios de referencia de los
#       umbrales o precios de entrada definidos en el árbol de decisión, con
#       costos transaccionales asociados a un bid-ask spread nulo.
# 0.2.3 No se considera la dinámica de los flujos de capital, pues  no se
#       tienen en cuenta los faltantes o excedentes de efectivo que se pueden
#       presentar al cerrar y abrir posiciones.
# 0.2.4 Para los cálculos de utilidad (pérdida o ganancia en términos
#       monetarios), se tiene en cuenta si la posición es larga o corta.
# 0.2.4 La hora del archivo de insumo OHLC corresponde a la de Santiago y por
#       lo tanto el código considera las fluctuaciones horarias con relación
#       a la hora del este de Estados Unidos.
# 0.3 Instrucciones
# 0.3.1 Guardar con el nombre "Data ETF ECH.xlsx" el archivo que contiene el
#       histórico de precios OHLC en la misma ruta donde se encuentra ubicado
#       el código "Estrategia y estadísticas ETF ECH (Réplica Swell).R". Se
#       debe verificar que el archivo solo contenga la información mencionada y
#       nada adicional (incluso celdas borradas).
# 1. PAQUETES Y CONFIGURACIONES ###############################################
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate",   # makedatetime, year, month,.., second
"ggplot2")     # ggplot
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Ubicación archivos de origen
BaseDirPath = dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
#Plantilla gráficos
# 2. LECTURA Y PREPARACIÓN DE DATOS ###########################################
# Lectura de archivo histórico de precios
ArchivoCargue <- "Data ETF ECH.xlsx"
BDPI <- read_excel(ArchivoCargue, sheet = "DATOS ECH")
# Asignación de títulos a las columnas
colnames(BDPI) <- c("DATE","FRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")
# Reorganizacion de fechas y franjas horarias
BDPI$DATEFRAME <- make_datetime(year = year(BDPI$DATE),
month = month(BDPI$DATE),
day = day(BDPI$DATE),
hour = hour(BDPI$FRAME),
min = minute(BDPI$FRAME),
sec = second(BDPI$FRAME))
BDPI[,c("DATE","FRAME")] <- NULL
BDPI <- BDPI[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPI$DATEFRAME)
BDPI <- BDPI[order(BDPI$DATEFRAME),]
# 3. CÁLCULO VELA DIARIA ##########################################################
BDPD <- BDPI
###  Estrategia y estadísticas ETF ECH (Réplica Swell)  ###
###                     2021-03-01                      ###
###                     Version 0.0                     ###
###          Authors: Olga Serna / Ivan Serrano         ###
# 0. DESCRIPCIÓN E INSTRUCCIONES ##############################################
# 0.1 Objetivo
# Calcular la señal de la estrategia y sus estadísticas de retorno y riesgo a
# partir de serie histórica OHLC (apertura, máximo, mínimo y cierre) y un árbol
# de decisión de estrategia.
# 0.2 Supuestos
# 0.2.1 Se realizan operaciones a las que haya lugar después de formación de la
#       vela de mercado para cada franja horaria, teniendo en cuenta el periodo
#       de tiempo permitido de operación definido para cada día, el cual excluye
#       las franjas horarias que se consideran de baja liquidez.
# 0.2.2 Todas las franjas horarias se tienen en cuenta para el cálculo de la
#       señal.
# 0.2.3 Se consigue operar en el mercado a los precios de referencia de los
#       umbrales o precios de entrada definidos en el árbol de decisión, con
#       costos transaccionales asociados a un bid-ask spread nulo.
# 0.2.3 No se considera la dinámica de los flujos de capital, pues  no se
#       tienen en cuenta los faltantes o excedentes de efectivo que se pueden
#       presentar al cerrar y abrir posiciones.
# 0.2.4 Para los cálculos de utilidad (pérdida o ganancia en términos
#       monetarios), se tiene en cuenta si la posición es larga o corta.
# 0.2.4 La hora del archivo de insumo OHLC corresponde a la de Santiago y por
#       lo tanto el código considera las fluctuaciones horarias con relación
#       a la hora del este de Estados Unidos.
# 0.3 Instrucciones
# 0.3.1 Guardar con el nombre "Data ETF ECH.xlsx" el archivo que contiene el
#       histórico de precios OHLC en la misma ruta donde se encuentra ubicado
#       el código "Estrategia y estadísticas ETF ECH (Réplica Swell).R". Se
#       debe verificar que el archivo solo contenga la información mencionada y
#       nada adicional (incluso celdas borradas).
# 1. PAQUETES Y CONFIGURACIONES ###############################################
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate",   # makedatetime, year, month,.., second
"ggplot2")     # ggplot
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Ubicación archivos de origen
BaseDirPath = dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
#Plantilla gráficos
# 2. LECTURA Y PREPARACIÓN DE DATOS ###########################################
# Lectura de archivo histórico de precios
ArchivoCargue <- "Data ETF ECH.xlsx"
BDPI <- read_excel(ArchivoCargue, sheet = "DATOS ECH")
# Asignación de títulos a las columnas
colnames(BDPI) <- c("DATE","FRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")
# Reorganizacion de fechas y franjas horarias
BDPI$DATEFRAME <- make_datetime(year = year(BDPI$DATE),
month = month(BDPI$DATE),
day = day(BDPI$DATE),
hour = hour(BDPI$FRAME),
min = minute(BDPI$FRAME),
sec = second(BDPI$FRAME))
BDPI[,c("DATE","FRAME")] <- NULL
BDPI <- BDPI[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPI$DATEFRAME)
BDPI <- BDPI[order(BDPI$DATEFRAME),]
# 3. CÁLCULO VELA DIARIA ##########################################################
BDPD <- BDPI
View(BDPD)
head(c(3,2,1))
?head
head(c(3,2,1),1)
tail(c(3,2,1),1)
install.packages("reshape2")
library("reshape2")
?cast
BDP$DATE <- as.Date(BDP$DATEFRAME)
###  Estrategia y estadísticas ETF ECH (Réplica Swell)  ###
###                     2021-03-01                      ###
###                     Version 0.0                     ###
###          Authors: Olga Serna / Ivan Serrano         ###
# 0. DESCRIPCIÓN E INSTRUCCIONES ##############################################
# 0.1 Objetivo
# Calcular la señal de la estrategia y sus estadísticas de retorno y riesgo a
# partir de serie histórica OHLC (apertura, máximo, mínimo y cierre) y un árbol
# de decisión de estrategia.
# 0.2 Supuestos
# 0.2.1 Se realizan operaciones a las que haya lugar después de formación de la
#       vela de mercado para cada franja horaria, teniendo en cuenta el periodo
#       de tiempo permitido de operación definido para cada día, el cual excluye
#       las franjas horarias que se consideran de baja liquidez.
# 0.2.2 Todas las franjas horarias se tienen en cuenta para el cálculo de la
#       señal.
# 0.2.3 Se consigue operar en el mercado a los precios de referencia de los
#       umbrales o precios de entrada definidos en el árbol de decisión, con
#       costos transaccionales asociados a un bid-ask spread nulo.
# 0.2.3 No se considera la dinámica de los flujos de capital, pues  no se
#       tienen en cuenta los faltantes o excedentes de efectivo que se pueden
#       presentar al cerrar y abrir posiciones.
# 0.2.4 Para los cálculos de utilidad (pérdida o ganancia en términos
#       monetarios), se tiene en cuenta si la posición es larga o corta.
# 0.2.4 La hora del archivo de insumo OHLC corresponde a la de Santiago y por
#       lo tanto el código considera las fluctuaciones horarias con relación
#       a la hora del este de Estados Unidos.
# 0.3 Instrucciones
# 0.3.1 Guardar con el nombre "Data ETF ECH.xlsx" el archivo que contiene el
#       histórico de precios OHLC en la misma ruta donde se encuentra ubicado
#       el código "Estrategia y estadísticas ETF ECH (Réplica Swell).R". Se
#       debe verificar que el archivo solo contenga la información mencionada y
#       nada adicional (incluso celdas borradas).
# 1. PAQUETES Y CONFIGURACIONES ###############################################
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate",   # makedatetime, year, month,.., second
"ggplot2")     # ggplot
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Ubicación archivos de origen
BaseDirPath = dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
#Plantilla gráficos
# 2. LECTURA Y PREPARACIÓN DE DATOS ###########################################
# Lectura de archivo histórico de precios
ArchivoCargue <- "Data ETF ECH.xlsx"
BDPI <- read_excel(ArchivoCargue, sheet = "DATOS ECH")
# Asignación de títulos a las columnas
colnames(BDPI) <- c("DATE","FRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")
# Reorganizacion de fechas y franjas horarias
BDPI$DATEFRAME <- make_datetime(year = year(BDPI$DATE),
month = month(BDPI$DATE),
day = day(BDPI$DATE),
hour = hour(BDPI$FRAME),
min = minute(BDPI$FRAME),
sec = second(BDPI$FRAME))
BDPI[,c("DATE","FRAME")] <- NULL
BDPI <- BDPI[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPI$DATEFRAME)
BDPI <- BDPI[order(BDPI$DATEFRAME),]
# 3. CÁLCULO VELA DIARIA ##########################################################
BDPD <- BDPI
BDP$DATE <- as.Date(BDP$DATEFRAME)
BDPI$DATE <- as.Date(BDPI$DATEFRAME)
View(BDPI)
###  Estrategia y estadísticas ETF ECH (Réplica Swell)  ###
###                     2021-03-01                      ###
###                     Version 0.0                     ###
###          Authors: Olga Serna / Ivan Serrano         ###
# 0. DESCRIPCIÓN E INSTRUCCIONES ##############################################
# 0.1 Objetivo
# Calcular la señal de la estrategia y sus estadísticas de retorno y riesgo a
# partir de serie histórica OHLC (apertura, máximo, mínimo y cierre) y un árbol
# de decisión de estrategia.
# 0.2 Supuestos
# 0.2.1 Se realizan operaciones a las que haya lugar después de formación de la
#       vela de mercado para cada franja horaria, teniendo en cuenta el periodo
#       de tiempo permitido de operación definido para cada día, el cual excluye
#       las franjas horarias que se consideran de baja liquidez.
# 0.2.2 Todas las franjas horarias se tienen en cuenta para el cálculo de la
#       señal.
# 0.2.3 Se consigue operar en el mercado a los precios de referencia de los
#       umbrales o precios de entrada definidos en el árbol de decisión, con
#       costos transaccionales asociados a un bid-ask spread nulo.
# 0.2.3 No se considera la dinámica de los flujos de capital, pues  no se
#       tienen en cuenta los faltantes o excedentes de efectivo que se pueden
#       presentar al cerrar y abrir posiciones.
# 0.2.4 Para los cálculos de utilidad (pérdida o ganancia en términos
#       monetarios), se tiene en cuenta si la posición es larga o corta.
# 0.2.4 La hora del archivo de insumo OHLC corresponde a la de Santiago y por
#       lo tanto el código considera las fluctuaciones horarias con relación
#       a la hora del este de Estados Unidos.
# 0.3 Instrucciones
# 0.3.1 Guardar con el nombre "Data ETF ECH.xlsx" el archivo que contiene el
#       histórico de precios OHLC en la misma ruta donde se encuentra ubicado
#       el código "Estrategia y estadísticas ETF ECH (Réplica Swell).R". Se
#       debe verificar que el archivo solo contenga la información mencionada y
#       nada adicional (incluso celdas borradas).
# 1. PAQUETES Y CONFIGURACIONES ###############################################
# Paquetes
Libraries <- c("readxl",      # read_excel
"rstudioapi",  # getActiveDocumentContext
"lubridate",   # makedatetime, year, month,.., second
"ggplot2")     # ggplot
# Instalación/cargue de paquetes
for (L in Libraries) {
eval(parse(text = (paste0("if (!require(",
L,
")) install.packages('",
L,
"')
library(",
L,
")"))))
}
# Ubicación archivos de origen
BaseDirPath = dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
#Plantilla gráficos
# 2. LECTURA Y PREPARACIÓN DE DATOS ###########################################
# Lectura de archivo histórico de precios
ArchivoCargue <- "Data ETF ECH.xlsx"
BDPI <- read_excel(ArchivoCargue, sheet = "DATOS ECH")
# Asignación de títulos a las columnas
colnames(BDPI) <- c("DATE","FRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")
# Reorganizacion de fechas y franjas horarias
BDPI$DATEFRAME <- make_datetime(year = year(BDPI$DATE),
month = month(BDPI$DATE),
day = day(BDPI$DATE),
hour = hour(BDPI$FRAME),
min = minute(BDPI$FRAME),
sec = second(BDPI$FRAME))
BDPI[,c("DATE","FRAME")] <- NULL
BDPI <- BDPI[,c("DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
# Tamaño y ordenamiento de datos
N <- length(BDPI$DATEFRAME)
BDPI <- BDPI[order(BDPI$DATEFRAME),]
# 3. CÁLCULO VELA DIARIA ##########################################################
BDPD <- BDPI
BDPD$DATE <- as.Date(BDPD$DATEFRAME)
BDPD <- BDPD[,c("DATE","DATEFRAME","OPEN","HIGH","LOW","CLOSE")]
library("reshape2")

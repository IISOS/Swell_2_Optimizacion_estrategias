)
eval(parse(text = FunFracCompra))
# Aplicación del desfase de la ventana móvil correspondiente a cada fractal
# intradiario de compra.Ejemplo FI1:
# BDPI$FI1_B_max_HIGH_4_1 <- shift(x = BDPI$FI1_B_max_HIGH_4_1, n = 1, fill = NA)
FunDesfaseCompra <- paste0("BDPI$", ParamFracI$NombreRefCompra,
" <- shift(x = ", "BDPI$", ParamFracI$NombreRefCompra,
", n = ", ParamFracI$Desfase, ", fill = NA)"
)
eval(parse(text = FunDesfaseCompra))
# Cálculo de la función sobre la referencia correspondiente a cada fractal
# intradiario de venta. Ejemplo FI1:
# BDPI$FI1_S_min_LOW_4_1 <- rollapplyr(data = BDPI$LOW, width = 4, FUN = min, fill = NA)
FunFracVenta <- paste0("BDPI$", ParamFracI$NombreRefVenta,
" <- rollapplyr(data = ", ParamFracI$RefVenta,
", width = ", ParamFracI$VentanaMovil,
", FUN = ", ParamFracI$`Función venta`, ", fill = NA)"
)
eval(parse(text = FunFracVenta))
# Aplicación del desfase de la ventana móvil correspondiente a cada fractal
# intradiario de venta. Ejemplo FI1:
# BDPI$FI1_S_min_LOW_4_1 <- shift(x = BDPI$FI1_S_min_LOW_4_1, n = 1, fill = NA)
FunDesfaseVenta <-paste0("BDPI$", ParamFracI$NombreRefVenta,
" <- shift(x = ", "BDPI$", ParamFracI$NombreRefVenta,
", n = ", ParamFracI$Desfase, ", fill = NA)"
)
eval(parse(text = FunDesfaseVenta))
# Señal para condiciones de "BUY" o "SELL" en cada fractal intradiario. Ejemplo FI1:
# BDPI$FI1 <- ifelse (BDPI$CLOSE > BDPI$FI1_B_max_HIGH_4_1, "BUY", ifelse(BDPI$CLOSE < BDPI$FI1_S_min_LOW_4_1, "SELL", NA))
FunSenFIX <- paste0("BDPI$", ParamFracI$Fractal,
" <- ifelse(",
ParamFracI$VariableCompra, ParamFracI$`Criterio compra`, "BDPI$", ParamFracI$NombreRefCompra,
", 'BUY', ",
"ifelse(",
ParamFracI$VariableVenta, ParamFracI$`Criterio venta`, "BDPI$", ParamFracI$NombreRefVenta,
", 'SELL', ",
"NA",
")",
")"
)
eval(parse(text = FunSenFIX))
# Señal para cada fractal intradiario cuando no se cumplen las condiciones de "BUY" o "SELL".
BDPI <- fill(data = BDPI, ParamFracI$Fractal, .direction = "down")
# 5. VELA DIARIA #############################################################
BDPD <- BDPI
BDPD$DATE <- as.Date(BDPD$DATEFRAME)
BDPD <- BDPD[,c("DATE","DATEFRAME","VOLUME","OPEN","HIGH","LOW","CLOSE")]
BDPD <- as.data.table(BDPD)
BDPD <- BDPD[,
.(VOLUME = sum(VOLUME),
OPEN = first(OPEN),
HIGH = max(HIGH),
LOW = min(LOW),
CLOSE = last(CLOSE)
),
by = "DATE"
]
# 6. CODIFICACIÓN DE FRACTALES DIARIOS (INCLUYE FIRX) #########################
# Variables de codificación de fractales diarios
ParamFracD <- read_excel(ArchivoFractales, sheet = "Parametros fractales")
# Insumos parametrización FIR
ParamFracD[(NFrac+2):(NFrac*2),] <- ParamFracD[(NFrac+1),] # Réplica de parámetros de FIR
LetraFIR <- "R" # Letra para identificación de fractales intradiarios de referencia
ParamFracD$Estrategia[(NFrac+1):(NFrac*2)] <- paste0(LetraFIR, (1:NFrac)) # Asignación de nombres de estrategias de referencia
ParamFracD$`Periodo inicio`[(NFrac+1):(NFrac*2)] <- ParamFracD$`Periodo inicio`[1:NFrac] # Réplica de periodo inicio de estrategia
ParamFracD$`Periodo fin`[(NFrac+1):(NFrac*2)] <- ParamFracD$`Periodo fin`[1:NFrac] # Réplica de periodo fin de estrategia
ParamFracD$VentanaMovil <- ParamFracD$`Periodo fin` - ParamFracD$`Periodo inicio` + 1
ParamFracD$Desfase <- -ParamFracD$`Periodo fin`
ParamFracD$Fractal <- paste0("FD", ParamFracD$Estrategia)
ParamFracD$NombreRefCompra <- paste0(ParamFracD$Fractal,
"_B_",
ParamFracD$`Función compra`,
"_",
ParamFracD$`Ref. compra`,
"_",
-ParamFracD$`Periodo inicio`,
"_",
-ParamFracD$`Periodo fin`
)
ParamFracD$NombreRefVenta <- paste0(ParamFracD$Fractal,
"_S_",
ParamFracD$`Función venta`,
"_",
ParamFracD$`Ref. venta`,
"_",
-ParamFracD$`Periodo inicio`,
"_",
-ParamFracD$`Periodo fin`
)
ParamFracD$VariableCompra <- paste0("BDPD$",ParamFracD$`Variable compra`)
ParamFracD$RefCompra <- paste0("BDPD$",ParamFracD$`Ref. compra`)
ParamFracD$VariableVenta <- paste0("BDPD$",ParamFracD$`Variable venta`)
ParamFracD$RefVenta <- paste0("BDPD$",ParamFracD$`Ref. venta`)
# Separación entre parámetros para FIR y para FD
ParamFracR <- ParamFracD[match(paste0(LetraFIR,(1:NFrac)),ParamFracD$Estrategia),]
ParamFracR$Fractal <- paste0("FI", ParamFracR$Estrategia) # Asignación de de nombres para FIRX
ParamFracD <- ParamFracD[-match(paste0(LetraFIR,(1:NFrac)),ParamFracD$Estrategia),] # Eliminación parámetros creados para FIRX.
ParamFracR$VariableCompra <- paste0("BDPI$",ParamFracD$`Variable compra`)
ParamFracR$VariableVenta <- paste0("BDPI$",ParamFracD$`Variable venta`)
# 7. CÁLCULO SEÑALES DE FRACTALES DIARIOS #####################################
# Cálculo de la función sobre la referencia correspondiente a cada fractal
# diario de compra.Ejemplo FD1:
# BDPD$FD1_B_max_HIGH_4_1 <- rollapplyr(data = BDPD$HIGH, width = 4, FUN = max, fill = NA)
FunFracCompra <- paste0("BDPD$", ParamFracD$NombreRefCompra,
" <- rollapplyr(data = ", ParamFracD$RefCompra,
", width = ", ParamFracD$VentanaMovil,
", FUN = ", ParamFracD$`Función compra`, ", fill = NA)"
)
eval(parse(text = FunFracCompra))
# Aplicación del desfase de la ventana móvil correspondiente a cada fractal
# diario de compra.Ejemplo FD1:
# BDPD$FD1_B_max_HIGH_4_1 <- shift(x = BDPD$FD1_B_max_HIGH_4_1, n = 1, fill = NA)
FunDesfaseCompra <- paste0("BDPD$", ParamFracD$NombreRefCompra,
" <- shift(x = ", "BDPD$", ParamFracD$NombreRefCompra,
", n = ", ParamFracD$Desfase, ", fill = NA)"
)
eval(parse(text = FunDesfaseCompra))
# Cálculo de la función sobre la referencia correspondiente a cada fractal
# diario de venta. Ejemplo FD1:
# BDPD$FD1_S_min_LOW_4_1 <- rollapplyr(data = BDPD$LOW, width = 4, FUN = min, fill = NA)
FunFracVenta <- paste0("BDPD$", ParamFracD$NombreRefVenta,
" <- rollapplyr(data = ", ParamFracD$RefVenta,
", width = ", ParamFracD$VentanaMovil,
", FUN = ", ParamFracD$`Función venta`, ", fill = NA)"
)
eval(parse(text = FunFracVenta))
# Aplicación del desfase de la ventana móvil correspondiente a cada fractal
# diario de venta. Ejemplo FD1:
# BDPD$FD1_S_min_LOW_4_1 <- shift(x = BDPD$FD1_S_min_LOW_4_1, n = 1, fill = NA)
FunDesfaseVenta <- paste0("BDPD$", ParamFracD$NombreRefVenta,
" <- shift(x = ", "BDPD$", ParamFracD$NombreRefVenta,
", n = ", ParamFracD$Desfase, ", fill = NA)"
)
eval(parse(text = FunDesfaseVenta))
# Señal para condiciones de "BUY" o "SELL" en cada fractal diario. Ejemplo FD1:
# BDPD$FD1 <- ifelse (BDPD$CLOSE > BDPD$FD1_B_max_HIGH_4_1, "BUY", ifelse(BDPD$CLOSE < BDPD$FD1_S_min_LOW_4_1, "SELL", NA))
FunSenFDX <- paste0("BDPD$", ParamFracD$Fractal,
" <- ifelse(",
ParamFracD$VariableCompra, ParamFracD$`Criterio compra`, "BDPD$", ParamFracD$NombreRefCompra,
", 'BUY', ",
"ifelse(",
ParamFracD$VariableVenta, ParamFracD$`Criterio venta`, "BDPD$", ParamFracD$NombreRefVenta,
", 'SELL', ",
"NA",
")",
")"
)
eval(parse(text = FunSenFDX))
# Señal para cada fractal diario cuando no se cumplen las condiciones de "BUY" o "SELL".
BDPD <- fill(data = BDPD, ParamFracD$Fractal, .direction = "down")
# 8. CÁLCULO FUNCIONES SOBRE REFERENCIAS DE FRACTALES DIARIOS DE REFERENCIA ####
# Cálculo de la función sobre la referencia correspondiente a cada fractal
# diario de referencia de compra.Ejemplo FDR1:
# BDPD$FDR1_B_max_HIGH_4_1 <- rollapplyr(data = BDPD$HIGH, width = 4, FUN = max, fill = NA)
FunFracCompra <- paste0("BDPD$", ParamFracR$NombreRefCompra,
" <- rollapplyr(data = ", ParamFracR$RefCompra,
", width = ", ParamFracR$VentanaMovil,
", FUN = ", ParamFracR$`Función compra`, ", fill = NA)"
)
eval(parse(text = FunFracCompra))
# Aplicación del desfase de la ventana móvil correspondiente a cada fractal
# diario de referencia de compra.Ejemplo FDR1:
# BDPD$FDR1_B_max_HIGH_4_1 <- shift(x = BDPD$FD1_B_max_HIGH_4_1, n = 1, fill = NA)
FunDesfaseCompra <- paste0("BDPD$", ParamFracR$NombreRefCompra,
" <- shift(x = ", "BDPD$", ParamFracR$NombreRefCompra,
", n = ", ParamFracR$Desfase, ", fill = NA)"
)
eval(parse(text = FunDesfaseCompra))
# Cálculo de la función sobre la referencia correspondiente a cada fractal
# diario de referencia de venta. Ejemplo FDR1:
# BDPD$FDR1_S_min_LOW_4_1 <- rollapplyr(data = BDPD$LOW, width = 4, FUN = min, fill = NA)
FunFracVenta <- paste0("BDPD$", ParamFracR$NombreRefVenta,
" <- rollapplyr(data = ", ParamFracR$RefVenta,
", width = ", ParamFracR$VentanaMovil,
", FUN = ", ParamFracR$`Función venta`, ", fill = NA)"
)
eval(parse(text = FunFracVenta))
# Aplicación del desfase de la ventana móvil correspondiente a cada fractal
# diario de referencia de venta. Ejemplo FDR1:
# BDPD$FDR1_S_min_LOW_4_1 <- shift(x = BDPD$FDR1_S_min_LOW_4_1, n = 1, fill = NA)
FunDesfaseVenta <-paste0("BDPD$", ParamFracR$NombreRefVenta,
" <- shift(x = ", "BDPD$", ParamFracR$NombreRefVenta,
", n = ", ParamFracR$Desfase, ", fill = NA)"
)
eval(parse(text = FunDesfaseVenta))
# 9. CÁLCULO SEÑALES DE FRACTALES INTRADIARIOS DE REFERENCIA ##################
# Identificación de fecha
BDPI$DATE <- NA
BDPI$DATE <- make_datetime(year = year(BDPI$DATEFRAME),
month = month(BDPI$DATEFRAME),
day = day(BDPI$DATEFRAME),
)
# Importe a la base de datos intradiaria de la función sobre la referencia
# correspondiente a cada fractal diario de referencia de venta. Ejemplo FDR1:
# BDPI$FDR1_B_max_HIGH_4_1 <- BDPD$FDR1_B_max_HIGH_4_1[match(as.Date(BDPI$DATE), BDPD$DATE)]
FunImporteFDRCompra <- paste0("BDPI$", ParamFracR$NombreRefCompra,
" <- BDPD$", ParamFracR$NombreRefCompra,
"[match(as.Date(BDPI$DATE), BDPD$DATE)]"
)
eval(parse(text = FunImporteFDRCompra))
# Importe a la base de datos intradiaria de la función sobre la referencia
# correspondiente a cada fractal diario de referencia de compra. Ejemplo FDR1:
# BDPI$FDR1_S_min_LOW_4_1 <- BDPD$FDR1_S_min_LOW_4_1[match(as.Date(BDPI$DATE), BDPD$DATE)]
FunImporteFDRVenta <- paste0("BDPI$", ParamFracR$NombreRefVenta,
" <- BDPD$", ParamFracR$NombreRefVenta,
"[match(as.Date(BDPI$DATE), BDPD$DATE)]"
)
eval(parse(text = FunImporteFDRVenta))
# Señal para condiciones de "BUY" o "SELL" en cada fractal intradiario de
# referencia. Ejemplo FIR1:
# BDPI$FIR1 <- ifelse (BDPI$CLOSE > BDPI$FDR1_B_max_HIGH_4_1, "BUY", ifelse(BDPI$CLOSE < BDPI$FDR1_S_min_LOW_4_1, "SELL", NA))
FunSenFIRX_BS <- paste0("BDPI$", ParamFracR$Fractal,
" <- ifelse(",
ParamFracR$VariableCompra, ParamFracR$`Criterio compra`, "BDPI$", ParamFracR$NombreRefCompra,
", 'BUY', ",
"ifelse(",
ParamFracR$VariableVenta, ParamFracR$`Criterio venta`, "BDPI$", ParamFracR$NombreRefVenta,
", 'SELL', ",
"NA",
")",
")"
)
eval(parse(text = FunSenFIRX_BS))
# Aplicación de un desfase a cada fractal diario para su asignación a FIRX
# cuando no se cumplen las condiciones de "BUY" o "SELL". Ejemplo FD1_NoBS:
# BDPD$FD1_NoBS <- shift(x = BDPD$FD1, n = DesfaseNoBS, fill = NA)
DesfaseNoBS <- 1
FunSenFDX_NoBS <- paste0("BDPD$", ParamFracD$Fractal, "_NoBS",
" <- shift(",
"x = ", "BDPD$", ParamFracD$Fractal,
", ",
"n = ", DesfaseNoBS,
", ",
"fill = NA",
")"
)
eval(parse(text = FunSenFDX_NoBS))
# Señal para cada fractal intradiario de referencia cuando no se cumplen las
# condiciones de "BUY" o "SELL".
# Importe de señal diaria empleada cuando no se cumplen las condiciones de
# "BUY" o "SELL", desde base de datos diaria a base de datos intradiaria.
# Ejemplo importe FD1_NoBS:
# BDPI$FD1_NoBS <- BDPD$FD1_NoBS[match(BDPI$DATE, BDPD$DATE)]
FunSenFDX_NoBS_I <- paste0("BDPI$", ParamFracD$Fractal, "_NoBS",
" <- BDPD$", ParamFracD$Fractal, "_NoBS",
"[match(as.Date(BDPI$DATE), BDPD$DATE)]"
)
eval(parse(text = FunSenFDX_NoBS_I))
# Ejemplo asignación a FIR1 de señal diaria empleada cuando no se cumplen las
# condiciones de "BUY" o "SELL":
# BDPI$FIR1 <- ifelse(is.na(BDPI$FIR1), BDPI$FD1_NoBS, BDPI$FIR1)
FunSenFIRX <- paste0("BDPI$", ParamFracR$Fractal,
" <- ifelse(",
"is.na(", "BDPI$", ParamFracR$Fractal, ")",
", ",
"BDPI$", ParamFracD$Fractal, "_NoBS",
", ",
"BDPI$", ParamFracR$Fractal,
")"
)
eval(parse(text = FunSenFIRX))
# 10. CÁLCULO SEÑAL INTRADIARIA FINAL #########################################
BDP_I1_R1 <- BDPI[,match(c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
"FI1",
"FIR1"
),
colnames(BDPI)
)
]
rep(1:9,3)
rep(c(1,2,3),c(3,3,3))
rep(1:NFrac,rep(NFrac, NFrac))
Senales <- data.frame(NombreBD = rep(NA, NFrac^2),
FI = rep(1:NFrac,rep(NFrac, NFrac)),
FIR = rep(1:NFrac, NFrac)
)
View(Senales)
Senales <- data.frame(NombreBD = rep(NA, NFrac^2),
FI = paste0("FI",rep(1:NFrac,rep(NFrac, NFrac))),
FIR = paste0("FIR", rep(1:NFrac, NFrac))
)
View(Senales)
Senales <- data.frame(NombreBD = rep(NA, NFrac^2),
I = rep(1:NFrac,rep(NFrac, NFrac)),
R = rep(1:NFrac, NFrac),
FI = paste0("FI",rep(1:NFrac,rep(NFrac, NFrac))),
FIR = paste0("FIR", rep(1:NFrac, NFrac))
)
Senales$NombreBD <- paste0("BDP_I", Senales$I, "_R_", Senales$R)
View(Senales)
Senales$NombreBD <- paste0("BDP_I", Senales$I, "_R", Senales$R)
View(Senales)
BDPF <- BDP[,match(c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
FI,
FIR
),
colnames(BDP)
)
]
CrearBDPI <- function(BDP, FI, FIR) {
BDPF <- BDP[,match(c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
FI,
FIR
),
colnames(BDP)
)
]
return(BDPF)
}
BDP_I1_R1p <- CrearBDPI(BDPI, Senales$FI[1], Senales$FIR[1])
View(BDP_I1_R1)
View(BDP_I1_R1p)
CrearBDPI <- Vectorize(CrearBDPI, vectorize.args = c("FI", "FIR"))
BDPS_List <- CrearBDPI(BDPI, Senales$FI, Senales$FIR)
View(BDPS_List)
BDPS_List <- CrearBDPI(BDPI, Senales$FI[1], Senales$FIR[1])
View(BDPS_List)
BDPS_List <- as.data.frame(CrearBDPI(BDPI, Senales$FI[1], Senales$FIR[1]))
View(BDPS_List)
CrearBDPI <- function(BDP, FI, FIR) {
BDPF <- BDP[,match(c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
FI,
FIR
),
colnames(BDP)
)
]
return(BDPF)
}
?lapply
BDPS_List <- lapply(BDPI, CrearBDPI)
BDPS_List <- lapply(BDPI, CrearBDPI, Senales$FI, Senales$FIR)
BDPS_List <- lapply(X = BDPI, FUN = CrearBDPI, FI = Senales$FI, FIR = Senales$FIR)
?quantile
df <- rep("BDPI", 81)
BDPS_List <- lapply(df, get)
View(BDPS_List)
BDPS_Listota <- lapply(X = BDPS_List, FUN = CrearBDPI, FI = Senales$FI, FIR = Senales$FIR)
View(BDPS_Listota)
x1 <- c(2,4)
x2 <- c(5,7)
listx <- list(x1,x2)
listmedias <- lapply(listx, mean)
listmedias
View(BDPS_Listota)
BDPS_Listota <- lapply(X = BDPS_List, FUN = CrearBDPI)
BDPS_Listota <- lapply(X = BDPS_List, FUN = CrearBDPI, FI = Senales$FI[1], FIR = Senales$FIR[1])
View(BDPS_Listota)
?mapply
mapply(rep, 1:4, 4:1)
BDPS_Listota <- mapply(FUN = CrearBDPI, X = BDPS_List, FI = Senales$FI, FIR = Senales$FIR)
BDPS_Listota <- mapply(FUN = CrearBDPI, BD = BDPS_List, FI = Senales$FI, FIR = Senales$FIR)
BDPS_Listota <- mapply(FUN = CrearBDPI, BDP = BDPS_List, FI = Senales$FI, FIR = Senales$FIR)
View(BDPS_Listota)
BDPS_Listota <- mapply(FUN = CrearBDPI, FI = Senales$FI, FIR = Senales$FIR, BDP = BDPS_List)
View(BDPS_Listota)
?lapply
BDPS_Listota <- lapply(BDP = BDPS_List, FUN = CrearBDPI, FI = Senales$FI, FIR = Senales$FIR)
Vlapply <- Vectorize(lapply, vectorize.args = "...")
Vlapply <- Vectorize(lapply)
VCrearBDPI <- Vectorize(CrearBDPI, vectorize.args = c("BDP","FI","FIR"))
BDPS_Listota <- VCrearBDPI(BDPS_List, Senales$FI, Senales$FIR)
View(BDPS_Listota)
VCrearBDPI <- Vectorize(CrearBDPI, vectorize.args = c(FI","FIR"))
BDPS_Listota <- VCrearBDPI(BDPS_List, Senales$FI, Senales$FIR)
BDPS_Listota <- lapply(X = BDPS_List, FUN = CrearBDPI, FI = Senales$FI, FIR = Senales$FIR)
BDP_I1_R1p <- CrearBDPI(BDPI, Senales$FI[1], Senales$FIR[1])
BDP_I1_R1 <- BDPI[,match(c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
"FI1",
"FIR1"
),
colnames(BDPI)
)
]
df <- rep("BDPI", 81)
BDPS_List <- lapply(df, get)
names(BDPS_List)
# Abreviaciones Señal Intradiaria Final
SIF <- paste0("SIF", 1:NFrac)
# Ejemplo FI1 y FIR1
# BDPI$SIF1 <- ifelse(BDPI$FI1 == BDPI$FIR1, BDPI$FI1, NA)
FunSIF <- paste0("BDPI$", SIF,
" <- ifelse(",
"BDPI$", ParamFracI$Fractal, " == ", "BDPI$", ParamFracR$Fractal,
",",
"BDPI$", ParamFracI$Fractal,
",",
"NA",
")"
)
eval(parse(text = FunSIF))
# 11. VELA INTRADIARIA PARA FRANJA HORARIA DE NEGOCIACION OBJETIVO ############
# Selección de columnas de interés para cálculos sobre las negociaciones
BDPSI <- BDPI[,match(c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
SIF
),
colnames(BDPI)
)
]
# 12. Transicion ####
# 13. Utilidad/Trade y DD/Trade (largo) ####
# 14. SenalSigno ####
# 15. Utilidad/Trade y DD/Trade (largo y corto) ####
# 16. Utilidad total y MDD ####
# 17. Comparacion utilidades activos ####
# X. CÁLCULO ESTADÍSTICAS #####################################################
BDP$RET <- c(0, rep(NA, (N-1)))
BDP$RET_ACUM <- c(0, rep(NA, (N-1)))
BDP$VAL_PORT_ACUM_B100 <- c(100, rep(NA, (N-1)))
BDP$MAX_PERD_ACUM <- c(0, rep(NA, (N-1)))
BDP$RET <- (BDP$VAL_PORT / c(NA, BDP$VAL_PORT[1:N-1]) -1) * c(NA, BDP$SENALSIGNO[1:N-1])
BDP$RET_ACUM <- c(NA, cumprod(1 + BDP$RET[2:N]))
RET_ACUM <- BDP$RET_ACUM[N] - 1
NDIAS <- as.numeric(BDP$DATE[N] - BDP$DATE[1])
RET_ACUM_ANUAL <- (1 + RET_ACUM)^(365/(NDIAS-1))-1
# X. RESUMEN ESTADÍSTICAS  ####################################################
# X. OBSERVACIONES ############################################################
#    1. Apalancamiento mal
#    2. Retorno mal
VCrearBDPI <- Vectorize(CrearBDPI, vectorize.args = c("FI","FIR"))
BDPS_Listota <- VCrearBDPI(BDPS_List, Senales$FI, Senales$FIR)
BDPS_Listota <- VCrearBDPI(BDPI, Senales$FI, Senales$FIR)
View(BDPS_Listota)
BDPS_Listota <- lapply(X = BDPS_List, FUN = CrearBDPI, FI = Senales$FI, FIR = Senales$FIR)
BDPS_Listota[[1]]
View(BDPS_Listota[[1]])
?mapply
BDPS_Listota <- mapply(FUN = CrearBDPI, BDP = BDPI, FI = Senales$FI, FIR = Senales$FIR)
BDPS_Listota <- mapply(FUN = CrearBDPI, BDP = BDPS_List, FI = Senales$FI, FIR = Senales$FIR)
View(BDPS_Listota)
BDPS_Listota <- mapply(FUN = CrearBDPI, BDP = BDPS_List, FI = ParamFracI$Fractal, FIR = ParamFracR$Fractal)
View(BDPS_Listota)
rm(list = BDPS_Listota)
rm(list = BDPS_Listota)
BDPS_Listota <- mapply(FUN = CrearBDPI,
BDP = BDPS_List,
FI = ParamFracI$Fractal[1],
FIR = ParamFracR$Fractal[1]
)
BDPS_Listota <- lapply(X = BDPS_List,
FUN = CrearBDPI,
FI = ParamFracI$Fractal,
FIR = ParamFracR$Fractal)
View(BDPS_Listota)
BDPS_Listota <- lapply(X = BDPI,
FUN = CrearBDPI,
FI = ParamFracI$Fractal,
FIR = ParamFracR$Fractal)
BDPS_Listota <- mapply(FUN = CrearBDPI,
BDP = BDPS_List,
FI = ParamFracI$Fractal[1],
FIR = ParamFracR$Fractal[1]
)
BDPS_Listota <- lapply(X = BDPS_List,
FUN = CrearBDPI,
FI = ParamFracI$Fractal,
FIR = ParamFracR$Fractal)
paste0("BDP_I1_R1",
" <- BDPI[,",
",",
"match(",
c("DATE",
"DATEFRAME",
"VOLUME",
"OPEN",
"HIGH",
"LOW",
"CLOSE",
"FI1",
"FIR1",
)",
",",
"colnames(BDPI)",
")",
]
)

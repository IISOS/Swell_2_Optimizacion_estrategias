# Preparación de datos para gráficos
SenalesOpt$RetAcum <- unlist(SenalesOpt$RetAcum)
SenalesOpt$ValAcumB100 <- unlist(SenalesOpt$ValAcumB100)
SenalesOpt$MaxPerdAcum <- unlist(SenalesOpt$MaxPerdAcum)
SenalesOpt$RAA_MPA <- unlist(SenalesOpt$RAA_MPA)
SenalesOpt$RazonSharpeAnual <- unlist(SenalesOpt$RazonSharpeAnual)
SenalesOpt$RazonSortinoAnual <- unlist(SenalesOpt$RazonSortinoAnual)
# Gráfico RetAcum/MDD por estrategia
G_RetAcum_MDD <- ggplot(SenalesOpt, aes(x = rownames(SenalesOpt), y = RAA_MPA)) +
geom_col() +
ggtitle("Ret.Acum/MDD por estrategia") +
xlab("Estrategia") + ylab("Ret.Acum/MDD") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_RetAcum_MDD)
ggsave(path = BaseDirPath,
plot = G_RetAcum_MDD,
filename = "Ret.Acum_MDD por estrategia.png",
scale = 2
)
# Gráfico RetAcum/MDD para estrategias por encima del promedio
Estrategias_RAA_MPA_Mayores_Promedio <-  SenalesOpt %>% filter(RAA_MPA > mean(RAA_MPA))
G_RetAcum_MDD_MayMed <- ggplot(Estrategias_RAA_MPA_Mayores_Promedio,
aes(x = reorder(rownames(Estrategias_RAA_MPA_Mayores_Promedio), RAA_MPA), y = RAA_MPA)) +
geom_col() +
ggtitle("Ret.Acum/MDD para estrategias por encima del promedio") +
xlab("Estrategia") + ylab("Ret.Acum/MDD") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_RetAcum_MDD_MayMed)
ggsave(path = BaseDirPath,
plot = G_RetAcum_MDD_MayMed,
filename = "Ret.Acum_MDD para estrategias por encima del promedio.png",
scale = 2
)
# Gráfico RetAcum/MDD para estrategias por encima del objetivo
RA_MDD_Objetivo <- as.numeric(read_excel(ArchivoInsumos,
sheet = "Insumos",
range = "B22",
col_names = FALSE
)
)
Estrategias_RAA_MPA_Mayores_Objetivo <-  SenalesOpt %>% filter(RAA_MPA > RA_MDD_Objetivo)
G_RetAcum_MDD_MayObj <- ggplot(Estrategias_RAA_MPA_Mayores_Objetivo,
aes(x = reorder(rownames(Estrategias_RAA_MPA_Mayores_Objetivo), RAA_MPA), y = RAA_MPA)) +
geom_col() +
ggtitle("Ret.Acum/MDD para estrategias por encima del objetivo") +
xlab("Estrategia") + ylab("Ret.Acum/MDD") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_RetAcum_MDD_MayObj)
ggsave(path = BaseDirPath,
plot = G_RetAcum_MDD_MayObj,
filename = "Ret.Acum_MDD para estrategias por encima del objetivo.png",
scale = 2
)
# Gráfico razón de Sharpe por estrategia
G_SharpeR <- ggplot(SenalesOpt, aes(x = rownames(SenalesOpt), y = RazonSharpeAnual)) +
geom_col() +
ggtitle("Razón de Sharpe por estrategia") +
xlab("Estrategia") + ylab("Razón de Sharpe") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_SharpeR)
ggsave(path = BaseDirPath,
plot = G_SharpeR,
filename = "Razón de Sharpe por estrategia.png",
scale = 2
)
# Gráfico Razón de Sharpe para estrategias por encima del promedio
Estrategias_Sharpe_Mayores_Promedio <-  SenalesOpt %>% filter(RazonSharpeAnual > mean(RazonSharpeAnual))
G_Sharpe_MayMed <- ggplot(Estrategias_Sharpe_Mayores_Promedio,
aes(x = reorder(rownames(Estrategias_Sharpe_Mayores_Promedio), RazonSharpeAnual), y = RazonSharpeAnual)) +
geom_col() +
ggtitle("Razón de Sharpe para estrategias por encima del promedio") +
xlab("Estrategia") + ylab("Razón de Sharpe") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sharpe_MayMed)
ggsave(path = BaseDirPath,
plot = G_Sharpe_MayMed,
filename = "Razón de Sharpe para estrategias por encima del promedio.png",
scale = 2
)
# Gráfico Razón de Sharpe para estrategias por encima del objetivo
Sharpe_Objetivo <- as.numeric(read_excel(ArchivoInsumos,
sheet = "Insumos",
range = "B23",
col_names = FALSE
)
)
Estrategias_Sharpe_Mayores_Objetivo <-  SenalesOpt %>% filter(RazonSharpeAnual > Sharpe_Objetivo)
G_Sharpe_MayObj <- ggplot(Estrategias_Sharpe_Mayores_Objetivo,
aes(x = reorder(rownames(Estrategias_Sharpe_Mayores_Objetivo), RazonSharpeAnual), y = RazonSharpeAnual)) +
geom_col() +
ggtitle("Razón de Sharpe para estrategias por encima del objetivo") +
xlab("Estrategia") + ylab("Razón de Sharpe") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sharpe_MayObj)
ggsave(path = BaseDirPath,
plot = G_Sharpe_MayObj,
filename = "Razón de Sharpe para estrategias por encima del objetivo.png",
scale = 2
)
# Gráfico Razón de Sortino por estrategia
G_SortinoR <- ggplot(SenalesOpt, aes(x = rownames(SenalesOpt), y = RazonSortinoAnual)) +
geom_col() +
ggtitle("Razón de Sortino por estrategia") +
xlab("Estrategia") + ylab("Razón de Sortino") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_SortinoR)
ggsave(path = BaseDirPath,
plot = G_SortinoR,
filename = "Razón de Sortino por estrategia.png",
scale = 2
)
# Gráfico Razón de Sortino para estrategias por encima del promedio
Estrategias_Sortino_Mayores_Media <-  SenalesOpt %>% filter(RazonSortinoAnual > mean(RazonSortinoAnual))
G_Sortino_MayMed <- ggplot(Estrategias_Sortino_Mayores_Media,
aes(x = reorder(rownames(Estrategias_Sortino_Mayores_Media), RazonSortinoAnual), y = RazonSortinoAnual)) +
geom_col() +
ggtitle("Razón de Sortino para estrategias por encima del promedio") +
xlab("Estrategia") + ylab("Razón de Sortino") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sortino_MayMed)
ggsave(path = BaseDirPath,
plot = G_Sortino_MayMed,
filename = "Razón de Sortino para estrategias por encima del promedio.png",
scale = 2
)
# Gráfico Razón de Sortino para estrategias por encima del objetivo
Sortino_Objetivo <- as.numeric(read_excel(ArchivoInsumos,
sheet = "Insumos",
range = "B24",
col_names = FALSE
)
)
Estrategias_Sortino_Mayores_Objetivo <-  SenalesOpt %>% filter(RazonSortinoAnual > Sortino_Objetivo)
G_Sortino_MayObj <- ggplot(Estrategias_Sortino_Mayores_Objetivo,
aes(x = reorder(rownames(Estrategias_Sortino_Mayores_Objetivo), RazonSortinoAnual), y = RazonSortinoAnual)) +
geom_col() +
ggtitle("Razón de Sortino para estrategias por encima del objetivo") +
xlab("Estrategia") + ylab("Razón de Sortino") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sortino_MayObj)
ggsave(path = BaseDirPath,
plot = G_Sortino_MayObj,
filename = "Razón de Sortino para estrategias por encima del objetivo.png",
scale = 2
)
}
FunExpComp(EstrategiaOpt[[c("Senales")]])
# Funcion para exportacion de estadisticas y graficos de estrategia optima y base
FunEstParamOpt <- function(ListaEstOpt, SenalesOpt, ListaEstBase) {
# Visualización y exportación BD estrategia óptima
View(ListaEstOpt[[EstParamOpt]]$BD)
ArchivoResultadosOpt <- createWorkbook()
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "SenalesOpt")
writeData(wb = ArchivoResultadosOpt, sheet = "SenalesOpt", x = SenalesOpt)
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "BDI")
writeData(wb = ArchivoResultadosOpt, sheet = "BDI", x = ListaEstOpt[[EstParamOpt]]$BD)
# Visualización y exportación gráfico valor portafolio estrategia óptima
Graf_ValPortAcumB100 <- ListaEstOpt[[EstParamOpt]]$Graf_ValPortAcumB100 +
ggtitle(paste0("Valor portafolio estrategia ", EstParamOpt, " (Base 100)"))
print(Graf_ValPortAcumB100)
ggsave(path = BaseDirPath,
plot = Graf_ValPortAcumB100,
filename = "Valor portafolio estrategia.png",
scale = 2
)
# Visualización y exportación gráfico valor portafolio estrategia óptima
# con y sin aplicación de parámetros de negociación
BDOptBase <- ListaEstOpt[[EstParamOpt]]$BD
BDOptBase$VAL_PORT_ACUM_B100_BASE <- ListaEstBase[[EstParamOpt]]$BD$VAL_PORT_ACUM_B100
Graf_ValPortAcumB100_OptBase <- ggplot(BDOptBase, aes(x = DATE)) +
geom_line(aes(y = VAL_PORT_ACUM_B100, color = "Opt"), size = 1) +
geom_line(aes(y = VAL_PORT_ACUM_B100_BASE, color = "Base"), size = 1) +
scale_colour_manual("", values = c("Opt"="red", "Base"="darkblue"), breaks=c("Opt","Base")) +
ggtitle("Valor portafolio (Base 100)") +
xlab("Fecha") + ylab("Valor (Base 100)") +
expand_limits(x = BDOptBase$DATE[1]) +
expand_limits(y = 0) +
PlantillaG
print(Graf_ValPortAcumB100_OptBase)
ggsave(path = BaseDirPath,
plot = Graf_ValPortAcumB100_OptBase,
filename = "Valor portafolio estrategia (Opt. vs. Base).png",
scale = 2
)
Graf_ValPortAcumB100 <- ListaEstOpt[[EstParamOpt]]$Graf_ValPortAcumB100 +
ggtitle(paste0("Valor portafolio estrategia ", EstParamOpt, " (Base 100)"))
print(Graf_ValPortAcumB100)
ggsave(path = BaseDirPath,
plot = Graf_ValPortAcumB100,
filename = "Valor portafolio estrategia.png",
scale = 2
)
# Visualización y exportación de estadísticas de retorno y riesgo de estrategia óptima
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "RetornosDiarios")
writeData(wb = ArchivoResultadosOpt, sheet = "RetornosDiarios", x = ListaEstOpt[[EstParamOpt]]$BDRDiario)
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "RetornosMensuales")
writeData(wb = ArchivoResultadosOpt, sheet = "RetornosMensuales", x = ListaEstOpt[[EstParamOpt]]$BDRMensual)
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "RetornosAnuales")
writeData(wb = ArchivoResultadosOpt, sheet = "RetornosAnuales", x = ListaEstOpt[[EstParamOpt]]$BDRAnual)
Nombre_BD_EstParamOpt <- SenalesOpt[c(EstParamOpt),c("NombreBD")]
NombreArchivoResultadosOpt <- paste0(Nombre_BD_EstParamOpt, "_Propuesta.xlsx")
saveWorkbook(wb = ArchivoResultadosOpt,
file = NombreArchivoResultadosOpt,
overwrite = TRUE
)
# Exportación BD estrategia con escenario base de parámetros de negociación
ArchivoBDEstrategiaParamBase <- createWorkbook()
addWorksheet(wb = ArchivoBDEstrategiaParamBase, sheetName = "BDI")
writeData(wb = ArchivoBDEstrategiaParamBase, sheet = "BDI", x = ListaEstBase[[EstParamOpt]]$BD)
Nombre_BD_EstParamOpt <- SenalesOpt[c(EstParamOpt),c("NombreBD")]
NombreArchivoBDEstrategiaParamBase <- paste0(Nombre_BD_EstParamOpt, "_Propuesta_Base.xlsx")
saveWorkbook(wb = ArchivoBDEstrategiaParamBase,
file = NombreArchivoBDEstrategiaParamBase,
overwrite = TRUE
)
# Visualización y exportación de combinaciones de parámetros
ArchivoParamOpt <- createWorkbook()
addWorksheet(wb = ArchivoParamOpt, sheetName = "Calibracion TP y SL")
writeData(wb = ArchivoParamOpt, sheet = "Calibracion TP y SL", x = Cal_TP_SL)
NombreArchivoParamOpt <- "Calibracion TP y SL.xlsx"
saveWorkbook(wb = ArchivoParamOpt,
file = NombreArchivoParamOpt,
overwrite = TRUE
)
}
FunEstParamOpt(EstrategiaOpt[[c("ListaEst")]],
EstrategiaOpt[[c("Senales")]],
EstrategiaBase[[c("ListaEst")]]
)
rm(list = c("EstrategiaBase", "ResEstrategias"))
EstrategiaBase <- FunDIFValEst(BDList,
Cal_TP_SL$TP[NPosibilidades_Opt + 1],
Cal_TP_SL$SL[NPosibilidades_Opt + 1],
Cal_TP_SL$CIERRE_TP[NPosibilidades_Opt + 1],
Cal_TP_SL$CIERRE_LL[NPosibilidades_Opt + 1]
)
BaseDirPath <- dirname(getActiveDocumentContext()$path)
setwd(BaseDirPath)
EstrategiaBase <- FunDIFValEst(BDList,
Cal_TP_SL$TP[NPosibilidades_Opt + 1],
Cal_TP_SL$SL[NPosibilidades_Opt + 1],
Cal_TP_SL$CIERRE_TP[NPosibilidades_Opt + 1],
Cal_TP_SL$CIERRE_LL[NPosibilidades_Opt + 1]
)
# Funcion para exportacion de graficos comparativos entre estrategias
FunExpComp <- function(SenalesOpt) {
# Preparación de datos para gráficos
SenalesOpt$RetAcum <- unlist(SenalesOpt$RetAcum)
SenalesOpt$ValAcumB100 <- unlist(SenalesOpt$ValAcumB100)
SenalesOpt$MaxPerdAcum <- unlist(SenalesOpt$MaxPerdAcum)
SenalesOpt$RAA_MPA <- unlist(SenalesOpt$RAA_MPA)
SenalesOpt$RazonSharpeAnual <- unlist(SenalesOpt$RazonSharpeAnual)
SenalesOpt$RazonSortinoAnual <- unlist(SenalesOpt$RazonSortinoAnual)
# Gráfico RetAcum/MDD por estrategia
G_RetAcum_MDD <- ggplot(SenalesOpt, aes(x = rownames(SenalesOpt), y = RAA_MPA)) +
geom_col() +
ggtitle("Ret.Acum/MDD por estrategia") +
xlab("Estrategia") + ylab("Ret.Acum/MDD") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_RetAcum_MDD)
ggsave(path = BaseDirPath,
plot = G_RetAcum_MDD,
filename = "Ret.Acum_MDD por estrategia.png",
scale = 2
)
# Gráfico RetAcum/MDD para estrategias por encima del promedio
Estrategias_RAA_MPA_Mayores_Promedio <-  SenalesOpt %>% filter(RAA_MPA > mean(RAA_MPA))
G_RetAcum_MDD_MayMed <- ggplot(Estrategias_RAA_MPA_Mayores_Promedio,
aes(x = reorder(rownames(Estrategias_RAA_MPA_Mayores_Promedio), RAA_MPA), y = RAA_MPA)) +
geom_col() +
ggtitle("Ret.Acum/MDD para estrategias por encima del promedio") +
xlab("Estrategia") + ylab("Ret.Acum/MDD") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_RetAcum_MDD_MayMed)
ggsave(path = BaseDirPath,
plot = G_RetAcum_MDD_MayMed,
filename = "Ret.Acum_MDD para estrategias por encima del promedio.png",
scale = 2
)
# Gráfico RetAcum/MDD para estrategias por encima del objetivo
RA_MDD_Objetivo <- as.numeric(read_excel(ArchivoInsumos,
sheet = "Insumos",
range = "B22",
col_names = FALSE
)
)
Estrategias_RAA_MPA_Mayores_Objetivo <-  SenalesOpt %>% filter(RAA_MPA > RA_MDD_Objetivo)
G_RetAcum_MDD_MayObj <- ggplot(Estrategias_RAA_MPA_Mayores_Objetivo,
aes(x = reorder(rownames(Estrategias_RAA_MPA_Mayores_Objetivo), RAA_MPA), y = RAA_MPA)) +
geom_col() +
ggtitle("Ret.Acum/MDD para estrategias por encima del objetivo") +
xlab("Estrategia") + ylab("Ret.Acum/MDD") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_RetAcum_MDD_MayObj)
ggsave(path = BaseDirPath,
plot = G_RetAcum_MDD_MayObj,
filename = "Ret.Acum_MDD para estrategias por encima del objetivo.png",
scale = 2
)
# Gráfico razón de Sharpe por estrategia
G_SharpeR <- ggplot(SenalesOpt, aes(x = rownames(SenalesOpt), y = RazonSharpeAnual)) +
geom_col() +
ggtitle("Razón de Sharpe por estrategia") +
xlab("Estrategia") + ylab("Razón de Sharpe") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_SharpeR)
ggsave(path = BaseDirPath,
plot = G_SharpeR,
filename = "Razón de Sharpe por estrategia.png",
scale = 2
)
# Gráfico Razón de Sharpe para estrategias por encima del promedio
Estrategias_Sharpe_Mayores_Promedio <-  SenalesOpt %>% filter(RazonSharpeAnual > mean(RazonSharpeAnual))
G_Sharpe_MayMed <- ggplot(Estrategias_Sharpe_Mayores_Promedio,
aes(x = reorder(rownames(Estrategias_Sharpe_Mayores_Promedio), RazonSharpeAnual), y = RazonSharpeAnual)) +
geom_col() +
ggtitle("Razón de Sharpe para estrategias por encima del promedio") +
xlab("Estrategia") + ylab("Razón de Sharpe") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sharpe_MayMed)
ggsave(path = BaseDirPath,
plot = G_Sharpe_MayMed,
filename = "Razón de Sharpe para estrategias por encima del promedio.png",
scale = 2
)
# Gráfico Razón de Sharpe para estrategias por encima del objetivo
Sharpe_Objetivo <- as.numeric(read_excel(ArchivoInsumos,
sheet = "Insumos",
range = "B23",
col_names = FALSE
)
)
Estrategias_Sharpe_Mayores_Objetivo <-  SenalesOpt %>% filter(RazonSharpeAnual > Sharpe_Objetivo)
G_Sharpe_MayObj <- ggplot(Estrategias_Sharpe_Mayores_Objetivo,
aes(x = reorder(rownames(Estrategias_Sharpe_Mayores_Objetivo), RazonSharpeAnual), y = RazonSharpeAnual)) +
geom_col() +
ggtitle("Razón de Sharpe para estrategias por encima del objetivo") +
xlab("Estrategia") + ylab("Razón de Sharpe") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sharpe_MayObj)
ggsave(path = BaseDirPath,
plot = G_Sharpe_MayObj,
filename = "Razón de Sharpe para estrategias por encima del objetivo.png",
scale = 2
)
# Gráfico Razón de Sortino por estrategia
G_SortinoR <- ggplot(SenalesOpt, aes(x = rownames(SenalesOpt), y = RazonSortinoAnual)) +
geom_col() +
ggtitle("Razón de Sortino por estrategia") +
xlab("Estrategia") + ylab("Razón de Sortino") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_SortinoR)
ggsave(path = BaseDirPath,
plot = G_SortinoR,
filename = "Razón de Sortino por estrategia.png",
scale = 2
)
# Gráfico Razón de Sortino para estrategias por encima del promedio
Estrategias_Sortino_Mayores_Media <-  SenalesOpt %>% filter(RazonSortinoAnual > mean(RazonSortinoAnual))
G_Sortino_MayMed <- ggplot(Estrategias_Sortino_Mayores_Media,
aes(x = reorder(rownames(Estrategias_Sortino_Mayores_Media), RazonSortinoAnual), y = RazonSortinoAnual)) +
geom_col() +
ggtitle("Razón de Sortino para estrategias por encima del promedio") +
xlab("Estrategia") + ylab("Razón de Sortino") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sortino_MayMed)
ggsave(path = BaseDirPath,
plot = G_Sortino_MayMed,
filename = "Razón de Sortino para estrategias por encima del promedio.png",
scale = 2
)
# Gráfico Razón de Sortino para estrategias por encima del objetivo
Sortino_Objetivo <- as.numeric(read_excel(ArchivoInsumos,
sheet = "Insumos",
range = "B24",
col_names = FALSE
)
)
Estrategias_Sortino_Mayores_Objetivo <-  SenalesOpt %>% filter(RazonSortinoAnual > Sortino_Objetivo)
G_Sortino_MayObj <- ggplot(Estrategias_Sortino_Mayores_Objetivo,
aes(x = reorder(rownames(Estrategias_Sortino_Mayores_Objetivo), RazonSortinoAnual), y = RazonSortinoAnual)) +
geom_col() +
ggtitle("Razón de Sortino para estrategias por encima del objetivo") +
xlab("Estrategia") + ylab("Razón de Sortino") +
expand_limits(x = 0) +
expand_limits(y = 0) +
PlantillaG
print(G_Sortino_MayObj)
ggsave(path = BaseDirPath,
plot = G_Sortino_MayObj,
filename = "Razón de Sortino para estrategias por encima del objetivo.png",
scale = 2
)
}
FunExpComp(EstrategiaOpt[[c("Senales")]])
# Funcion para exportacion de estadisticas y graficos de estrategia optima y base
FunEstParamOpt <- function(ListaEstOpt, SenalesOpt, ListaEstBase) {
# Visualización y exportación BD estrategia óptima
View(ListaEstOpt[[EstParamOpt]]$BD)
ArchivoResultadosOpt <- createWorkbook()
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "SenalesOpt")
writeData(wb = ArchivoResultadosOpt, sheet = "SenalesOpt", x = SenalesOpt)
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "BDI")
writeData(wb = ArchivoResultadosOpt, sheet = "BDI", x = ListaEstOpt[[EstParamOpt]]$BD)
# Visualización y exportación gráfico valor portafolio estrategia óptima
Graf_ValPortAcumB100 <- ListaEstOpt[[EstParamOpt]]$Graf_ValPortAcumB100 +
ggtitle(paste0("Valor portafolio estrategia ", EstParamOpt, " (Base 100)"))
print(Graf_ValPortAcumB100)
ggsave(path = BaseDirPath,
plot = Graf_ValPortAcumB100,
filename = "Valor portafolio estrategia.png",
scale = 2
)
# Visualización y exportación gráfico valor portafolio estrategia óptima
# con y sin aplicación de parámetros de negociación
BDOptBase <- ListaEstOpt[[EstParamOpt]]$BD
BDOptBase$VAL_PORT_ACUM_B100_BASE <- ListaEstBase[[EstParamOpt]]$BD$VAL_PORT_ACUM_B100
Graf_ValPortAcumB100_OptBase <- ggplot(BDOptBase, aes(x = DATE)) +
geom_line(aes(y = VAL_PORT_ACUM_B100, color = "Opt"), size = 1) +
geom_line(aes(y = VAL_PORT_ACUM_B100_BASE, color = "Base"), size = 1) +
scale_colour_manual("", values = c("Opt"="red", "Base"="darkblue"), breaks=c("Opt","Base")) +
ggtitle("Valor portafolio (Base 100)") +
xlab("Fecha") + ylab("Valor (Base 100)") +
expand_limits(x = BDOptBase$DATE[1]) +
expand_limits(y = 0) +
PlantillaG
print(Graf_ValPortAcumB100_OptBase)
ggsave(path = BaseDirPath,
plot = Graf_ValPortAcumB100_OptBase,
filename = "Valor portafolio estrategia (Opt. vs. Base).png",
scale = 2
)
Graf_ValPortAcumB100 <- ListaEstOpt[[EstParamOpt]]$Graf_ValPortAcumB100 +
ggtitle(paste0("Valor portafolio estrategia ", EstParamOpt, " (Base 100)"))
print(Graf_ValPortAcumB100)
ggsave(path = BaseDirPath,
plot = Graf_ValPortAcumB100,
filename = "Valor portafolio estrategia.png",
scale = 2
)
# Visualización y exportación de estadísticas de retorno y riesgo de estrategia óptima
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "RetornosDiarios")
writeData(wb = ArchivoResultadosOpt, sheet = "RetornosDiarios", x = ListaEstOpt[[EstParamOpt]]$BDRDiario)
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "RetornosMensuales")
writeData(wb = ArchivoResultadosOpt, sheet = "RetornosMensuales", x = ListaEstOpt[[EstParamOpt]]$BDRMensual)
addWorksheet(wb = ArchivoResultadosOpt, sheetName = "RetornosAnuales")
writeData(wb = ArchivoResultadosOpt, sheet = "RetornosAnuales", x = ListaEstOpt[[EstParamOpt]]$BDRAnual)
Nombre_BD_EstParamOpt <- SenalesOpt[c(EstParamOpt),c("NombreBD")]
NombreArchivoResultadosOpt <- paste0(Nombre_BD_EstParamOpt, "_Propuesta.xlsx")
saveWorkbook(wb = ArchivoResultadosOpt,
file = NombreArchivoResultadosOpt,
overwrite = TRUE
)
# Exportación BD estrategia con escenario base de parámetros de negociación
ArchivoBDEstrategiaParamBase <- createWorkbook()
addWorksheet(wb = ArchivoBDEstrategiaParamBase, sheetName = "BDI")
writeData(wb = ArchivoBDEstrategiaParamBase, sheet = "BDI", x = ListaEstBase[[EstParamOpt]]$BD)
Nombre_BD_EstParamOpt <- SenalesOpt[c(EstParamOpt),c("NombreBD")]
NombreArchivoBDEstrategiaParamBase <- paste0(Nombre_BD_EstParamOpt, "_Propuesta_Base.xlsx")
saveWorkbook(wb = ArchivoBDEstrategiaParamBase,
file = NombreArchivoBDEstrategiaParamBase,
overwrite = TRUE
)
# Visualización y exportación de combinaciones de parámetros
ArchivoParamOpt <- createWorkbook()
addWorksheet(wb = ArchivoParamOpt, sheetName = "Calibracion TP y SL")
writeData(wb = ArchivoParamOpt, sheet = "Calibracion TP y SL", x = Cal_TP_SL)
NombreArchivoParamOpt <- "Calibracion TP y SL.xlsx"
saveWorkbook(wb = ArchivoParamOpt,
file = NombreArchivoParamOpt,
overwrite = TRUE
)
}
FunEstParamOpt(EstrategiaOpt[[c("ListaEst")]],
EstrategiaOpt[[c("Senales")]],
EstrategiaBase[[c("ListaEst")]]
)
rm(list = c("EstrategiaBase", "ResEstrategias"))
